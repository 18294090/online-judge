-- phpMyAdmin SQL Dump
-- version 5.0.2
-- https://www.phpmyadmin.net/
--
-- 主机： localhost
-- 生成日期： 2021-07-01 10:57:17
-- 服务器版本： 5.6.50-log
-- PHP 版本： 7.4.20

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- 数据库： `yhoj`
--

-- --------------------------------------------------------

--
-- 表的结构 `problem`
--

CREATE TABLE `problem` (
  `id` int(11) NOT NULL,
  `title` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `description` text COLLATE utf8_unicode_ci,
  `input` text COLLATE utf8_unicode_ci,
  `output` text COLLATE utf8_unicode_ci,
  `sample_input` text COLLATE utf8_unicode_ci,
  `sample_output` text COLLATE utf8_unicode_ci,
  `spj` smallint(1) DEFAULT '0',
  `hint` text COLLATE utf8_unicode_ci,
  `source` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `time_limit` int(11) DEFAULT NULL,
  `memory_limit` int(11) DEFAULT NULL,
  `status` smallint(6) DEFAULT '0',
  `accepted` int(11) DEFAULT '0',
  `submit` int(11) DEFAULT '0',
  `solved` int(11) DEFAULT '0',
  `tags` text COLLATE utf8_unicode_ci,
  `solution` text COLLATE utf8_unicode_ci,
  `created_at` datetime DEFAULT NULL,
  `created_by` int(11) DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `polygon_problem_id` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- 转存表中的数据 `problem`
--

INSERT INTO `problem` (`id`, `title`, `description`, `input`, `output`, `sample_input`, `sample_output`, `spj`, `hint`, `source`, `time_limit`, `memory_limit`, `status`, `accepted`, `submit`, `solved`, `tags`, `solution`, `created_at`, `created_by`, `updated_at`, `polygon_problem_id`) VALUES
(10, '数学公式的使用', '<p>\r\n$\\lt$&emsp;&emsp;&emsp; \\lt&nbsp;\r\n</p>\r\n<p>\r\n$\\leqslant$&emsp;&emsp;&emsp; \\leqslant&nbsp;\r\n</p>\r\n<p>\r\n$\\gt$ &emsp;&emsp;&emsp; \\gt&nbsp;\r\n</p>\r\n<p>\r\n$\\geqslant$&emsp;&emsp;&emsp; \\geqslant&nbsp;\r\n</p>\r\n<p>\r\n&nbsp;$\\not =$&emsp;&emsp;&emsp; \\not =&nbsp;\r\n</p>\r\n<p>\r\n$\\gets$&emsp;&emsp;&emsp; \\gets&nbsp;\r\n</p>\r\n<p>\r\n$\\to$&emsp;&emsp;&emsp; \\to&nbsp;\r\n</p>\r\n<p>\r\n$x_n$&emsp;&emsp;&emsp; x_n&nbsp;\r\n</p>\r\n<p>\r\n$x+y^{2x}$&emsp;&emsp;&emsp; x+y^{2x}&nbsp;\r\n</p>\r\n<p>\r\n$\\sqrt{x}$&emsp;&emsp;&emsp; \\sqrt{x}&nbsp;\r\n</p>\r\n<p>\r\n&nbsp;$\\sqrt[3]{x}$&emsp;&emsp;&emsp; \\sqrt[3]{x}&nbsp;\r\n</p>\r\n<p>\r\n$\\dfrac{a}{b}$&emsp;&emsp;&emsp; \\dfrac{a}{b}&nbsp;\r\n</p>\r\n<p>\r\n$\\dfrac{a}{1 + \\dfrac{1}{b}}$&emsp;&emsp;&emsp; \\dfrac{a}{1 + \\dfrac{1}{b}}&nbsp;\r\n</p>\r\n<p>\r\n$+ − / ∗ ⋅ ± × ÷$    + − / ∗ ⋅ ± × ÷$\r\n</p>', '', '', 'a:3:{i:0;s:0:\"\";i:1;s:0:\"\";i:2;s:0:\"\";}', 'a:3:{i:0;s:0:\"\";i:1;s:0:\"\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 0, 0, 0, 0, '', NULL, '2020-09-28 10:48:43', 6, '2020-10-15 13:48:02', NULL),
(1000, '我的第一个Python程序', '<p>\r\n&nbsp;各位天才的同学，今天你要完成一个惊天地泣鬼神的程序设计，那就是鼎鼎大名的\"Hello,Python!\"。它就像小学一年级数学课上的1+1，一个简单而舒适的起点。也正如字面意思所说，它将引导你开启一个新的世界，一个等着你用好奇心去创造、去改变的新世界……&nbsp;\r\n</p>\r\n<p>\r\n<br />\r\n</p>\r\n<p>\r\n参考我们的课本第一课的亲身体验，输出“Hello,Python!”\r\n</p>\r\n<p>\r\n请一定要注意print函数的格式，以及字母的大小写哦！\r\n</p>', '<p>\r\n无\r\n</p>', '<p>\r\n不提供\r\n</p>', 'a:3:{i:0;s:3:\"无\";i:1;s:0:\"\";i:2;s:0:\"\";}', 'a:3:{i:0;s:13:\"Hello,Python!\";i:1;s:0:\"\";i:2;s:0:\"\";}', 0, '请参考书本。', '信息技术', 1, 128, 1, 811, 1984, 0, '八上一单元', NULL, '2020-09-04 06:03:18', NULL, '2020-11-01 16:32:06', NULL),
(1001, '欢迎同学来到python的世界', '同学们来到python世界一周了，这个新奇的世界是一个宽容、自由的社会，它已经向你发出了友好的声音。', '<p>输入一行，为进入python世界同学的姓名。</p>', '<p>输出为一行，前导是“Welcome,”，后面为一个空格，再加上之前输入的同学姓名。</p>', 'a:3:{i:0;s:6:\"张三\";i:1;s:0:\"\";i:2;s:0:\"\";}', 'a:3:{i:0;s:15:\"Welcome, 张三\";i:1;s:0:\"\";i:2;s:0:\"\";}', 0, '输入数据之前不需要有提示性的文字，一定要注意哦！', '信息技术', 1, 128, 1, 672, 2999, 0, '八上一单元', NULL, '2020-09-04 06:03:18', NULL, '2020-09-16 05:10:35', NULL),
(1002, 'A+B 问题', '大部分的在线题库，都会将 A+B 问题作为第一题，以帮助新手熟悉平台的使用方法。\r\nA+B 问题的题目描述如下：给定两个整数 A 和 B，输出 A+B 的值。保证 A、B 及结果均在整型范围内。现在请你解决这一问题。', '二行，包含两个整数 A，B，A 和 B 均在整型范围内。', '一个整数，即 A+B 的值。保证结果在整型范围内。', 'a:3:{i:0;s:4:\"1\r\n2\";i:1;s:8:\"120\r\n150\";i:2;s:0:\"\";}', 'a:3:{i:0;s:1:\"3\";i:1;s:3:\"270\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 1384, 3091, 0, '八上一单元,运算符和表达式', NULL, '2020-09-04 06:03:18', NULL, '2020-10-29 14:27:04', NULL),
(1003, '计算(a+b)×c的值', '给定 3 个整数 a、b、c ，计算表达式 (a+b)×c 的值。', '输入仅 3 行，包括三个整数 a、b、c。( -10000 ⩽ a,b,c ⩽ 10000)', '输出一行，即表达式的值。', 'a:3:{i:0;s:7:\"2\r\n3\r\n5\";i:1;s:8:\"10\r\n2\r\n3\";i:2;s:0:\"\";}', 'a:3:{i:0;s:2:\"25\";i:1;s:2:\"36\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 676, 1349, 0, '八上一单元,运算符和表达式', NULL, '2020-09-23 08:25:52', 6, '2020-10-29 14:27:47', NULL),
(1004, '带余除法', '给定被除数和除数，求整数商及余数。此题中请使用默认的整除和取余运算，无需对结果进行任何特殊处理。', '二行，包含两个整数，依次为被除数和除数（除数非零）', '一行，包含两个整数，依次为整数商和余数，中间用一个空格隔开。', 'a:3:{i:0;s:5:\"10\r\n3\";i:1;s:5:\"17\r\n3\";i:2;s:0:\"\";}', 'a:3:{i:0;s:3:\"3 1\";i:1;s:3:\"5 2\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 881, 2409, 0, '八上一单元,运算符和表达式', NULL, '2020-09-23 08:03:52', 6, '2020-10-29 14:28:34', NULL),
(1005, '计算分数的浮点数值', '两个整数 $a$ 和 $b$ 分别作为分子和分母，既分数 $\\dfrac{a}{b}$，求它的浮点数值。', '输入仅二行，包括两个整数 a 和 b 。', '输出仅一行，分数&nbsp;<span>$\\dfrac{a}{b}$</span> 的浮点数值。', 'a:3:{i:0;s:4:\"5\r\n7\";i:1;s:7:\"392\r\n19\";i:2;s:0:\"\";}', 'a:3:{i:0;s:18:\"0.7142857142857143\";i:1;s:17:\"20.63157894736842\";i:2;s:0:\"\";}', 0, '本小题输出的值为Python中浮点数的计算的结果，其它语言计算的话，可能因为精度不同会判为答案错误。', '', 1, 128, 1, 596, 927, 0, '八上一单元,运算符和表达式', NULL, '2020-09-23 23:41:09', 6, '2020-10-29 14:29:56', NULL),
(1006, '分解3位自然数', '输入一个 3 位数的自然数，然后依次输出这个数每位上的数字，并用逗号分开。', '一个 3 位自然数', '依次输出百位、十位、个数上的数，用逗号分开(**注意:中间不含空格**)。', 'a:3:{i:0;s:3:\"123\";i:1;s:3:\"817\";i:2;s:0:\"\";}', 'a:3:{i:0;s:5:\"1,2,3\";i:1;s:5:\"8,1,7\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 459, 1223, 0, '八上一单元,运算符和表达式', NULL, '2020-09-24 09:05:25', 6, '2020-10-29 14:30:51', NULL),
(1007, '温度表达转化', '利用公式 F = 32 + 9 × C ÷ 5 (其中 C 表示摄氏温度，F 表示华氏温度)进行计算转化,输入摄氏温度 C，输出华氏温度 F  ，要求精确到小数点后 2 位。', '输入一行，包含一个实数 C ，表示摄氏温度。', '输出一行，包含一个实数，表示对应的华氏温度，要求精确到小数点后 2 位。', 'a:3:{i:0;s:1:\"5\";i:1;s:5:\"36399\";i:2;s:0:\"\";}', 'a:3:{i:0;s:5:\"41.00\";i:1;s:8:\"65550.20\";i:2;s:0:\"\";}', 0, '在本系统中，使用input()函数时，请不要在括号中加入提示文字，否则会被判为答案错误。\r\n书中:\r\nF = float(input(\"请输入摄氏度：\"))\r\n应改为:\r\nF = float(input())', '', 1, 128, 1, 456, 1431, 0, '八上一单元,运算符和表达式', NULL, '2020-09-24 09:15:55', 6, '2020-10-29 14:32:19', NULL),
(1008, '甲流疫情死亡率', '甲流并不可怕，在中国，它的死亡率并不是很高。请根据截止2009年12月22日各省报告的甲流确诊数和死亡数，计算甲流在各省的死亡率。', '输入二行，有两个整数，第一个为确诊数，第二个为死亡数。', '输出一行，甲流死亡率，以百分数形式输出，精确到小数点后3位。', 'a:3:{i:0;s:9:\"10433\r\n60\";i:1;s:14:\"12336941\r\n1394\";i:2;s:0:\"\";}', 'a:3:{i:0;s:6:\"0.575%\";i:1;s:6:\"0.011%\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 256, 774, 0, '八上一单元,运算符和表达式', NULL, '2020-09-24 09:22:48', 6, '2020-10-29 14:33:57', NULL),
(1009, '家庭年龄求解', '在学习了编程方法后，明明自己编写了一个家庭成员年龄问题求解题目，想考考在线答题的同学们。程序要求：已知明明的年龄 a ( 0 &lt; a &lt;20 ) ，他的哥哥比他大 5 岁，他的爸爸比哥哥大 25 岁，他的爷爷比爸爸大 25 岁。请求出明明哥哥、爸爸以及爷爷的年龄并输出。', '一行一个整数，为明明的年龄 a ( 0 &lt; a &lt;20 )。', '一行三个整数，分别是哥哥、爸爸、爷爷的年龄，中间用一个空格分开。', 'a:3:{i:0;s:2:\"10\";i:1;s:2:\"17\";i:2;s:0:\"\";}', 'a:3:{i:0;s:8:\"15 40 65\";i:1;s:8:\"22 47 72\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 385, 713, 0, '八上一单元,运算符和表达式', NULL, '2020-09-24 09:57:45', 6, '2020-10-29 14:34:55', NULL),
(1010, '分钟计算', '给你一天里的两个时间(24小时制),求这两个时间内有多少分钟,保证第一个时间在第二个时间之前。', '输入两行,每行包含两个整数表示小时与分钟。', '输出分钟数。', 'a:3:{i:0;s:12:\"10 10\r\n11 05\";i:1;s:12:\"15 15\r\n20 30\";i:2;s:0:\"\";}', 'a:3:{i:0;s:2:\"55\";i:1;s:3:\"315\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 136, 290, 0, '八上一单元,运算符和表达式', NULL, '2020-09-24 09:41:34', 6, '2020-10-29 14:36:21', NULL),
(1011, '三位数悬案', '明明被卷入了一个三位数的悬案中，具体案情是这样的：有一个三位整数，百位上的数比十位上的数大1，个位上的数是百位上的数的2倍，求这个三位数是多少？你能帮他编程解决这个悬案吗？', '一行，一个十位上的整数 a (0 ⩽ a ⩽ 3)。', '一行一个三位整数。', 'a:3:{i:0;s:1:\"0\";i:1;s:1:\"3\";i:2;s:0:\"\";}', 'a:3:{i:0;s:3:\"102\";i:1;s:3:\"438\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 234, 571, 0, '八上一单元,运算符和表达式', NULL, '2020-09-24 09:44:58', 6, '2020-10-29 14:36:49', NULL),
(1012, '计算并联电阻的阻值', '对于阻值为 $r1$ 和 $r2$ 的电阻，其并联电阻阻值公式计算如下： $R = \\dfrac{1}{\\dfrac{1}{r1} + \\dfrac{1}{r2}}$ 。输入两个电阻阻抗大小，浮点型。输出并联之后的阻抗大小，结果保留小数点后 2 位。', '两个电阻阻抗大小，浮点型，以一个空格分开。', '并联之后的阻抗大小，结果保留小数点后 2 位。', 'a:3:{i:0;s:3:\"1 2\";i:1;s:12:\"250474 25275\";i:2;s:0:\"\";}', 'a:3:{i:0;s:4:\"0.67\";i:1;s:8:\"22958.31\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 92, 206, 0, '八上一单元,运算符和表达式', NULL, '2020-10-30 09:45:16', 6, '2020-10-30 09:46:12', NULL),
(1013, '时间转换', '输入一个总秒数，计算是几小时几分钟几秒，并一行输出。', '输入一行，一个整数，表示总秒数。', '输出一行，三个整数，表示小时、分钟、秒，每两个数之间用一个空格隔开。', 'a:3:{i:0;s:4:\"7201\";i:1;s:0:\"\";i:2;s:0:\"\";}', 'a:3:{i:0;s:5:\"2 0 1\";i:1;s:0:\"\";i:2;s:0:\"\";}', 0, '', '八上一单元', 1, 128, 1, 47, 99, 0, '八上一单元,运算符和表达式', NULL, '2020-12-08 18:48:13', 4, '2020-12-23 09:26:36', NULL),
(1100, '保留3位小数的浮点数', '<span>读入一个单精度浮点数，保留 3 位小数输出这个浮点数。</span>', '<span>只有一行，一个单精度浮点数。</span>', '<span>也只有一行，保留 3 位小数的单精度浮点数。</span>', 'a:3:{i:0;s:8:\"12.34521\";i:1;s:5:\"-2345\";i:2;s:0:\"\";}', 'a:3:{i:0;s:6:\"12.345\";i:1;s:9:\"-2345.000\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 342, 1824, 0, '八上二单元,顺序结构', NULL, '2020-10-14 08:47:39', 6, '2020-10-29 14:37:22', NULL),
(1101, '整数的十位', '<span>输入一个整数，求其十位数 ?</span>', '<span>输入一个整数。</span>', '<span>输出一个整数。</span>', 'a:3:{i:0;s:3:\"123\";i:1;s:8:\"17232239\";i:2;s:0:\"\";}', 'a:3:{i:0;s:1:\"2\";i:1;s:1:\"3\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 254, 854, 0, '八上二单元,顺序结构', NULL, '2020-10-14 08:38:32', 6, '2020-10-29 14:37:48', NULL),
(1102, '计算价格', '香蕉3元/斤，橘子2元/斤，葡萄8元/斤。买a斤香蕉、b斤橘子、c斤葡萄，问需要多少钱？', '输入包括三行，每行一个0至200的整数，分别表示a,b,c。', '输出所需要的钱数。', 'a:3:{i:0;s:7:\"1\r\n2\r\n3\";i:1;s:12:\"99\r\n195\r\n117\";i:2;s:0:\"\";}', 'a:3:{i:0;s:2:\"31\";i:1;s:4:\"1623\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 217, 443, 0, '八上二单元,顺序结构', NULL, '2020-09-25 08:42:15', 6, '2020-10-29 14:38:28', NULL),
(1103, '字符菱形', '给定一个字符，用它构造一个对角线长 5 个字符，倾斜放置的菱形。', '输入只有一行， 包含一个字符。', '该字符构成的菱形。', 'a:3:{i:0;s:1:\"*\";i:1;s:1:\"x\";i:2;s:0:\"\";}', 'a:3:{i:0;s:27:\"  *\r\n ***\r\n*****\r\n ***\r\n  *\";i:1;s:27:\"  x\r\n xxx\r\nxxxxx\r\n xxx\r\n  x\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 54, 118, 0, '八上二单元,顺序结构', NULL, '2020-09-25 08:13:03', 6, '2020-10-29 14:39:19', NULL),
(1104, '反向输出一个三位数', '将一个三位数反向输出，例如输入 358 ，反向输出 853 。', '一个三位数 $n$ 。', '反向输出 $n$ 。', 'a:3:{i:0;s:3:\"100\";i:1;s:3:\"358\";i:2;s:0:\"\";}', 'a:3:{i:0;s:3:\"001\";i:1;s:3:\"853\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 47, 90, 0, '八上二单元,顺序结构', NULL, '2020-09-25 08:21:20', 6, '2020-10-29 14:40:06', NULL),
(1105, '求平均值', '输入三个整数，计算并输出它们的平均数。(保留小数点后 6 位)', '输入一行，包含三个整数 $a, b, c$ 。', '输出一行， 包含一个浮点数，小数点后保留六位。', 'a:3:{i:0;s:5:\"4 5 6\";i:1;s:17:\"16837 99766 18315\";i:2;s:0:\"\";}', 'a:3:{i:0;s:8:\"5.000000\";i:1;s:12:\"44972.666667\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 65, 170, 0, '八上二单元,顺序结构', NULL, '2020-09-25 08:26:57', 6, '2020-10-29 14:40:50', NULL),
(1106, '计算线段长度', '已知线段的两个端点的坐标 $A(X_a,Y_a)，B(X_b,Y_b)$ ，求线段 $AB$ 的长度，保留到小数点后 3 位。', '第一行是两个实数 $X_a，Y_a$ ，即 $A$ 的坐标。 \r\n第二行是两个实数 $X_b，Y_b$ ，即 $B$ 的坐标。 \r\n输入中所有实数的绝对值均不超过 10000 。', '一个实数，即线段 $AB$ 的长度，保留到小数点后 3 位。', 'a:3:{i:0;s:8:\"1 1\r\n2 2\";i:1;s:22:\"9980 3423 \r\n5311 3074 \";i:2;s:0:\"\";}', 'a:3:{i:0;s:5:\"1.414\";i:1;s:8:\"4682.025\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 89, 245, 0, '八上二单元,顺序结构', NULL, '2020-09-25 08:34:02', 6, '2020-10-29 14:41:34', NULL),
(1107, '等差数列末项计算', '<p>\r\n给出一个等差数列的前两项 $a_1，a_2$ ，求第 $n$ 项是多少?\r\n</p>\r\n<p>\r\n<br />\r\n</p>\r\n<p>\r\n等差数列的计算公式为: $a_n = a_1 + (n - 1) × d$\r\n</p>\r\n<p>\r\n<br />\r\n</p>\r\n<p>\r\n公式中首项为$a_1$，末项为 $a_n$，项数为 $n$，公差为 $d$。\r\n</p>\r\n<p>\r\n<br />\r\n</p>', '一行，包含三个整数 $a1，a2，n$ 。$−100 \\leqslant a1,a2 \\leqslant 100，0 &lt; n \\leqslant 1000$。', '一个整数，即第 $n$ 项的值。', 'a:3:{i:0;s:7:\"1 4 100\";i:1;s:11:\"-27 -58 890\";i:2;s:0:\"\";}', 'a:3:{i:0;s:3:\"298\";i:1;s:6:\"-27586\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 192, 398, 0, '八上二单元,顺序结构', NULL, '2020-09-25 08:36:57', 6, '2020-10-29 14:42:13', NULL),
(1108, '计算球的体积', '对于半径为 $r$ 的球，其体积的计算公式为 $V=\\frac{4}{3}\\pi r^{3}$，这里取 $\\pi=3.14$ 。现给定 $r$，即球半径，类型为实数，求球的体积 $V$，保留到小数点后 2 位。', '输入为一个不超过 100 的非负实数，即球半径，类型为实数 。', '输出一个实数，即球的体积，保留到小数点后  2 位。', 'a:3:{i:0;s:1:\"4\";i:1;s:5:\"81.81\";i:2;s:0:\"\";}', 'a:3:{i:0;s:6:\"267.95\";i:1;s:10:\"2292385.02\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 157, 290, 0, '八上二单元,顺序结构', NULL, '2020-09-25 08:17:51', 6, '2020-10-29 14:43:02', NULL),
(1109, '人民币支付', '从键盘输入一指定金额（ 以元为单位，如 345 元），然后输出支付该金额的各种面额的人民币数量，显示 100 元，50 元，20 元，10 元，5 元，1 元各多少张，要求尽量使用大面额的钞票。', '一个小于 10000 的正整数。', '输出分行，每行显示一个整数，从上到下分别表示 100 元，50 元，20 元，10 元，5 元，1 元人民币的张数。', 'a:3:{i:0;s:3:\"735\";i:1;s:4:\"5564\";i:2;s:0:\"\";}', 'a:3:{i:0;s:16:\"7\r\n0\r\n1\r\n1\r\n1\r\n0\";i:1;s:17:\"55\r\n1\r\n0\r\n1\r\n0\r\n4\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 67, 131, 0, '八上二单元,顺序结构', NULL, '2020-09-25 08:47:46', 6, '2020-10-29 14:43:45', NULL),
(1110, '海伦公式求三角形面积', '用海伦公式求解三角形面积，需要先知道三条边的长度，然后根据公式计算面积。计算公式如下：\r\n$s = \\sqrt{p(p-a)(p-b)(p-c)} $\r\n其中 p = (a+b+c)/2', '输入分三行，每行一个实数，表示三角形的三条边长。', '三角形的面积 s（保留3位小数）', 'a:3:{i:0;s:13:\"3.0\r\n4.0\r\n5.0\";i:1;s:15:\"429\r\n328\r\n453\r\n\";i:2;s:0:\"\";}', 'a:3:{i:0;s:5:\"6.000\";i:1;s:9:\"66956.956\";i:2;s:0:\"\";}', 0, '<p>\r\n在本系统中，使用input()函数时，请不要在括号中加入提示文字，否则会被判为答案错误。&nbsp;\r\n</p>\r\n<p>\r\n书中:&nbsp;\r\n</p>\r\n<p>\r\na = float(input(\"输入三角形第一边长\"))&nbsp;\r\n</p>\r\n<p>\r\nb = float(input(\"输入三角形第二边长\"))&nbsp;\r\n</p>\r\n<p>\r\nc = float(input(\"输入三角形第三边长\"))&nbsp;\r\n</p>\r\n<p>\r\n<br />\r\n</p>\r\n<p>\r\n应改为:&nbsp;\r\n</p>\r\n<p>\r\na = float(input())&nbsp;\r\n</p>\r\n<p>\r\nb = float(input())&nbsp;\r\n</p>\r\n<p>\r\nc = float(input())\r\n</p>', '', 1, 128, 1, 329, 1611, 0, '八上二单元,顺序结构', NULL, '2020-09-24 10:08:30', 6, '2020-10-29 14:44:37', NULL),
(1111, '与圆相关的计算', '给出圆的半径，求圆的直径、周长和面积。输入圆的半径实数 r ，输出圆的直径、周长、面积，每个数保留小数点后 4 位。圆周率取值为 3.14159 。', '输入包含一个实数 r ，表示圆的半径。', '输出一行，包含三个数，分别表示圆的直径、周长、面积，数与数之间以一个空格分开，每个数保留小数点后 4 位。', 'a:3:{i:0;s:3:\"3.0\";i:1;s:5:\"84.73\";i:2;s:0:\"\";}', 'a:3:{i:0;s:22:\"6.0000 18.8495 28.2743\";i:1;s:28:\"169.4600 532.3738 22554.0178\";i:2;s:0:\"\";}', 0, '<p>\r\n在本系统中，使用input()函数时，请不要在括号中加入提示文字，否则会被判为答案错误。&nbsp;\r\n</p>\r\n<p>\r\n书中:\r\n</p>\r\n<p>\r\n&nbsp;R=float(input(\"请输入圆的半径R：\"))&nbsp;\r\n</p>\r\n<p>\r\n应改为:&nbsp;\r\n</p>\r\n<p>\r\nR=float(input())\r\n</p>', '', 1, 128, 1, 176, 861, 0, '八上二单元,顺序结构', NULL, '2020-09-24 09:35:35', 6, '2020-10-29 14:46:01', NULL),
(1200, '出租车费计算', '某市出租车收费标准如下: 3 千米以内(含3千米)收费10元，超过 3 千米的部分每千米收费 2 元，不到 1 公里的按 1 公里计算。请在输入行驶路程后，计算输出付费金额。', '出租车行驶的距离 ，为一个实数。', '收费的金额，要求输出一个整数，不含小数点。', 'a:3:{i:0;s:2:\"10\";i:1;s:3:\"297\";i:2;s:0:\"\";}', 'a:3:{i:0;s:2:\"24\";i:1;s:3:\"598\";i:2;s:0:\"\";}', 0, '<p>\r\n在本系统中，使用input()函数时，请不要在括号中加入提示文字，否则会被判为答案错误。&nbsp;\r\n</p>\r\n<p>\r\n书中:&nbsp;\r\n</p>\r\n<p>\r\ns=float(input(\"请输入行驶路程：\"))&nbsp;\r\n</p>\r\n<p>\r\n应改为:\r\n</p>\r\n<p>\r\n&nbsp;s=float(input())&nbsp;\r\n</p>\r\n<p>\r\n<br />\r\n</p>\r\n<p>\r\n输出时只要:\r\nprint(m)\r\n</p>', '', 1, 128, 1, 114, 564, 0, '八上二单元,分支结构', NULL, '2020-09-25 12:43:15', 6, '2020-10-29 14:46:55', NULL),
(1201, '如果构成三角形就计算面积', '用海伦公式求解三角形面积，需要先知道三条边的长度，然后根据公式计算面积。计算公式如下：\r\n$s = \\sqrt{p(p-a)(p-b)(p-c)} $\r\n其中 p = (a+b+c)/2\r\n如果输入的 3 条边的长度不构成三角形，则输出“输入的三条边，不能构成三角形！”。', '输入分三行，每行一个实数，表示三角形的三条边长。', '三角形的面积 s（保留3位小数）\r\n如果输入的 3 条边的长度不构成三角形，则输出“error”。', 'a:3:{i:0;s:13:\"3.0\r\n4.0\r\n5.0\";i:1;s:13:\"1.0\r\n1.0\r\n3.0\";i:2;s:0:\"\";}', 'a:3:{i:0;s:5:\"6.000\";i:1;s:5:\"error\";i:2;s:0:\"\";}', 0, '<p>\r\n在本系统中，使用input()函数时，请不要在括号中加入提示文字，否则会被判为答案错误。&nbsp;\r\n</p>\r\n<p>\r\n书中:&nbsp;\r\n</p>\r\n<p>\r\na = float(input(\"输入三角形第一边长\"))&nbsp;\r\n</p>\r\n<p>\r\nb = float(input(\"输入三角形第二边长\"))&nbsp;\r\n</p>\r\n<p>\r\nc = float(input(\"输入三角形第三边长\"))&nbsp;\r\n</p>\r\n<p>\r\n<br />\r\n</p>\r\n<p>\r\n应改为:&nbsp;\r\n</p>\r\n<p>\r\na = float(input())&nbsp;\r\n</p>\r\n<p>\r\nb = float(input())&nbsp;\r\n</p>\r\n<p>\r\nc = float(input())\r\n</p>', '', 1, 128, 1, 244, 1520, 0, '八上二单元,分支结构', NULL, '2020-09-25 12:50:33', 6, '2020-11-02 12:08:46', NULL),
(1202, '判断数正负', '给定一个整数 $n$ ，判断其正负。如果 $n&gt;0$ ，输出 positive ；如果 $n=0$ ，输出 zero ；如果 $n&lt;0$ ，输出 negative 。', '一个整数 $n(−10^9 \\leqslant n \\leqslant 10^9)$ 。', '如果 $n&gt;0$ , 输出 positive ;\r\n如果 $n=0$ , 输出 zero ;\r\n如果 $n&lt;0$ , 输出 negative 。', 'a:3:{i:0;s:1:\"1\";i:1;s:2:\"-1\";i:2;s:0:\"\";}', 'a:3:{i:0;s:8:\"positive\";i:1;s:8:\"negative\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 66, 472, 0, '八上二单元,分支结构', NULL, '2020-09-25 13:03:33', 6, '2020-10-29 14:47:57', NULL),
(1203, '奇偶数判断', '给定一个整数，判断该数是奇数还是偶数。如果 $n$ 是奇数，输出 $odd$ ；如果 $n$ 是偶数，输出 $even$ 。', '输入仅一行，一个大于零的正整数 $n$ 。', '输出仅一行，如果 $n$ 是奇数，输出 $odd$ ；如果n是偶数，输出 $even$ 。', 'a:3:{i:0;s:1:\"5\";i:1;s:1:\"8\";i:2;s:0:\"\";}', 'a:3:{i:0;s:3:\"odd\";i:1;s:4:\"even\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 145, 479, 0, '八上二单元,分支结构', NULL, '2020-09-25 13:06:04', 6, '2020-10-29 14:26:22', NULL),
(1204, '判断是否为两位数', '判断一个正整数是否是两位数(即大于等于 10 且小于等于 99 )。若该正整数是两位数，输出 1 ，否则输出 0 。', '一个正整数，不超过 1000 。', '一行。若该正整数是两位数，输出 1 ，否则输出 0 。', 'a:3:{i:0;s:2:\"54\";i:1;s:3:\"200\";i:2;s:0:\"\";}', 'a:3:{i:0;s:1:\"1\";i:1;s:1:\"0\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 146, 315, 0, '八上二单元,分支结构', NULL, '2020-09-25 13:08:44', 6, '2020-09-25 13:08:52', NULL),
(1205, '判断一个数能否同时被3和5整除', '判断一个数 $n$ 能否同时被 3 和 5 整除，如果能同时被 3 和 5 整除输出 YES ，否则输出 NO  。', '输入一行，包含一个整数 $n$ 。（$ -1,000,000 < n < 1,000,000）$', '输出一行，如果能同时被 3 和 5 整除输出 YES ，否则输出 NO 。', 'a:3:{i:0;s:2:\"15\";i:1;s:0:\"\";i:2;s:0:\"\";}', 'a:3:{i:0;s:3:\"YES\";i:1;s:0:\"\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 138, 457, 0, '八上二单元,分支结构', NULL, '2020-09-25 13:10:22', 6, '2020-09-25 13:10:47', NULL),
(1206, '收集瓶盖赢大奖', '某饮料公司最近推出了一个“收集瓶盖赢大奖”的活动：如果你拥有 10 个印有“幸运”、或 20 个印有“鼓励”的瓶盖，就可以兑换一个神秘大奖。现分别给出你拥有的印有“幸运”和“鼓励”的瓶盖数，判断是否可以去兑换大奖。若可以兑换大奖，输出 1 ，否则输出 0 。', '一行，包含两个整数，分别是印有“幸运”和“鼓励”的瓶盖数，用一个空格隔开。', '一行。若可以兑换大奖，输出 1 ，否则输出 0 。', 'a:3:{i:0;s:5:\"11 19\";i:1;s:0:\"\";i:2;s:0:\"\";}', 'a:3:{i:0;s:1:\"1\";i:1;s:0:\"\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 12, 27, 0, '八上二单元,分支结构', NULL, '2020-09-25 13:12:21', 6, '2020-09-25 13:12:46', NULL),
(1207, '吃瓜群众', '群众想要吃瓜，于是给你一个瓜让你切，但是作为考验，\r\n告诉你西瓜的重量，问你能否将这个西瓜平均分成两部分，每个部分重量都是偶数。', '输入一行，包含一个整数 $w$ ,表示西瓜的重量 $( 1 \\leqslant w \\leqslant 100 )$。', '输出一行，见样例。', 'a:3:{i:0;s:1:\"8\";i:1;s:1:\"3\";i:2;s:0:\"\";}', 'a:3:{i:0;s:55:\"YES, you can divide the watermelon into two even parts.\";i:1;s:56:\"NO, you can\'t divide the watermelon into two even parts.\";i:2;s:0:\"\";}', 0, '要注意检查你的输出格式要跟样例输出一模一样才能通过，尤其别忘了句子最后的小点哦', '', 1, 128, 1, 15, 49, 0, '八上二单元,分支结构', NULL, '2020-09-25 13:14:10', 6, '2020-09-25 13:14:39', NULL),
(1208, '超级偶数', '如果一个数是一个偶数而且大于 100 ,我们称它为超级偶数，给你一个数,判断它是否是超级偶数。', '输入一个整数 $n ( 1 \\leqslant n \\leqslant 10000 )$。', '如果是超级偶数,输出 \"yes\" , 否则输出 \"no\" 。', 'a:3:{i:0;s:2:\"50\";i:1;s:3:\"102\";i:2;s:0:\"\";}', 'a:3:{i:0;s:2:\"no\";i:1;s:3:\"yes\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 70, 116, 0, '八上二单元,分支结构', NULL, '2020-09-25 13:16:03', 6, '2020-09-25 13:16:29', NULL),
(1209, '晶晶去旅游', '晶晶今年的学习任务很重，但是她也知道学习需要劳逸结合，所以想外出旅游一天。但是她周一到周五都需要上课，只有周六与周日才有空可以外出旅游。晶晶已经知道今年的 1 月 1 日是星期二，而且今年不是闰年，但是她身边没带日历本，她想知道今年的某月某日是不是适合外出旅游，请你设计一个程序来计算一下今年某月某日是不是可以外出旅游，可以的话，输出 \"yes\" ，否则输出 \"no\" 。', '输入 2 个整数并用一个空格分开，分别代表几月几日，数据保证不会超出日期的有效范围。', '如果可以外出旅游，就输出\"yes\"，否则输出\"no\"（输出不带引号）。', 'a:3:{i:0;s:3:\"1 1\";i:1;s:3:\"1 5\";i:2;s:0:\"\";}', 'a:3:{i:0;s:2:\"no\";i:1;s:3:\"yes\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 8, 22, 0, '八上二单元,分支结构', NULL, '2020-09-25 13:18:07', 6, '2020-09-25 13:18:36', NULL),
(1210, '行李托运费', '某车站行李托运收费标准是：10公斤或10公斤以下，每公斤收费2.5元，超过10公斤的行李，按则超过部分每公斤收费1.5元进行收费。 试编一程序，输入行李的重量，算出托运费。输入重量为整数。\r\n结果保留两位小数。', '一个整数，为行李的重量。', '一个浮点数，为托运行李的费用。', 'a:3:{i:0;s:1:\"1\";i:1;s:2:\"11\";i:2;s:0:\"\";}', 'a:3:{i:0;s:4:\"2.50\";i:1;s:5:\"26.50\";i:2;s:0:\"\";}', 0, '在本系统中，使用input()函数时，请不要在括号中加入提示文字，否则会被判为答案错误。\r\n要求只能用一个IF解决问题。（用到Else部分）', '分支结构', 1, 128, 1, 30, 63, 0, '八上二单元,分支结构', NULL, '2020-09-27 09:04:36', 4, '2020-09-27 09:14:39', NULL),
(1211, '判断闰年', '输入一个正整数，表示年份，判断是否是闰年。', '一行： 一个正整数，表示年份。', '一行：是闰年，输出\"Yes\"，否则输出\"No\"，不含双引号。', 'a:3:{i:0;s:4:\"1000\";i:1;s:4:\"2020\";i:2;s:0:\"\";}', 'a:3:{i:0;s:2:\"No\";i:1;s:3:\"Yes\";i:2;s:0:\"\";}', 0, '闰年条件：\r\n满足下列条件之一的年份即为闰年：\r\n1）能被4整除不能被100整除的年份；\r\n2）能被400整除的年份。', '分支结构', 1, 128, 1, 111, 556, 0, '八上二单元,分支结构', NULL, '2020-09-27 09:27:46', 4, '2020-09-27 09:28:26', NULL),
(1212, '超市卖电池', '雅斯超市里卖电池，每个电池2.5元，若数量达到10个，则可打8折。编写一程序，输入电池数量，输出购买电池需多少元钱（小数点后保留2位）。', '一行：一个正整数，表示电池数量。', '一行：一个实型数据，表示购买电池需用多少钱，小数点后保留2位。', 'a:3:{i:0;s:1:\"1\";i:1;s:2:\"10\";i:2;s:0:\"\";}', 'a:3:{i:0;s:4:\"2.50\";i:1;s:5:\"20.00\";i:2;s:0:\"\";}', 0, '', '分支结构', 1, 128, 1, 9, 14, 0, '八上二单元,分支结构', NULL, '2020-09-27 09:42:14', 4, '2020-09-27 09:43:25', NULL),
(1213, '两个数比大小', '有A，B两个不相等的整数，请将其中较大数打印出来。', '输入2行，分别为2个整数。', '输出只有一行，包括1个整数。', 'a:3:{i:0;s:4:\"1\r\n2\";i:1;s:6:\"20\r\n11\";i:2;s:0:\"\";}', 'a:3:{i:0;s:1:\"2\";i:1;s:2:\"20\";i:2;s:0:\"\";}', 0, '', '分支结构', 1, 128, 1, 93, 252, 0, '八上二单元,分支结构', NULL, '2020-09-27 11:08:08', 4, '2020-09-27 11:10:25', NULL),
(1214, '晨练', '输入温度t的值，判断是否适合晨练。($25 \\leqslant t \\leqslant 30$，则适合晨练ok，否则不适合no)', '一个整数 $t$，表示温度。', '适合晨练输出\"ok!\"，否则输出\"no!\"。', 'a:3:{i:0;s:2:\"28\";i:1;s:2:\"33\";i:2;s:0:\"\";}', 'a:3:{i:0;s:3:\"ok!\";i:1;s:3:\"no!\";i:2;s:0:\"\";}', 0, '', '分支结构', 1, 128, 1, 10, 14, 0, '八上二单元,分支结构', NULL, '2020-09-27 11:28:27', 4, '2020-10-20 13:08:38', NULL),
(1215, '任意三位数打乱次序后的最大值', '任意输入一个三位整数，再把它的次序打乱重新组合一个新的三位整数，使其值最大。', '输入只有一行，包括1个三位整数。', '输出只有一行，包括1个整数。', 'a:3:{i:0;s:3:\"123\";i:1;s:3:\"470\";i:2;s:0:\"\";}', 'a:3:{i:0;s:3:\"321\";i:1;s:3:\"740\";i:2;s:0:\"\";}', 0, '', '分支结构', 1, 128, 1, 9, 14, 0, '八上二单元,分支结构', NULL, '2020-09-27 12:44:08', 4, '2020-09-27 12:45:45', NULL),
(1216, '交换两数', '读入a，b，若 a&gt;b 则交换 a，b 的值，再输出 a,b 的值，否则直接输出 a,b 的值；', '两个整数 a 和 b', '输出两个数，小数在前大数在后，中间用一个空格分隔。', 'a:3:{i:0;s:4:\"1\r\n2\";i:1;s:6:\"650\r\n3\";i:2;s:0:\"\";}', 'a:3:{i:0;s:3:\"1 2\";i:1;s:5:\"3 650\";i:2;s:0:\"\";}', 0, '', '分支结构', 1, 128, 1, 12, 17, 0, '八上二单元,分支结构', NULL, '2020-09-27 12:57:23', 4, '2020-10-15 07:35:26', NULL),
(1217, '较大数的平方', '判断两个数a，b，输出较大数的平方值。', '两个整数a, b。', '较大数的平方。', 'a:3:{i:0;s:4:\"1\r\n2\";i:1;s:4:\"5\r\n8\";i:2;s:0:\"\";}', 'a:3:{i:0;s:1:\"4\";i:1;s:2:\"64\";i:2;s:0:\"\";}', 0, '', '分支结构', 1, 128, 1, 71, 120, 0, '八上二单元,分支结构', NULL, '2020-09-27 13:03:42', 4, '2020-09-27 13:07:01', NULL),
(1218, '三个数排序', '输入三个数，按由大到小顺序打印出来。', '三行，分别为三个整数。', '三个数从大到小输出，中间用一个空格分隔。', 'a:3:{i:0;s:7:\"1\r\n2\r\n3\";i:1;s:0:\"\";i:2;s:0:\"\";}', 'a:3:{i:0;s:6:\"3 2 1 \";i:1;s:0:\"\";i:2;s:0:\"\";}', 0, '', '分支结构', 1, 128, 1, 9, 19, 0, '八上二单元,分支结构', NULL, '2020-09-27 13:11:28', 4, '2020-09-27 13:13:59', NULL),
(1219, '服装销售', '某服装公司为了推销产品，采取这样的批发销售方案:凡订购超过100 套的，每套定价为50元，否则每套价格为80元。输入订购套数，输出应付款的金额数。', '一个整数，表示订购服装数，不超过1000。', '一个整数，表示应付的金额。', 'a:3:{i:0;s:1:\"5\";i:1;s:0:\"\";i:2;s:0:\"\";}', 'a:3:{i:0;s:3:\"400\";i:1;s:0:\"\";i:2;s:0:\"\";}', 0, '', '分支结构', 1, 128, 1, 36, 91, 0, '八上二单元,分支结构', NULL, '2020-09-27 14:20:49', 4, '2020-09-27 14:23:42', NULL),
(1300, '最大最小值', '输入三个数，输出最大数，最小数。', '输入一行，包含三个整数 $a, b , c$ $( 1 \\leqslant a,b,c \\leqslant 1000000 )$。', '输出两行，第一行输出最大数，第二行输出最小数。具体格式见样例输出。', 'a:3:{i:0;s:5:\"1 2 3\";i:1;s:0:\"\";i:2;s:0:\"\";}', 'a:3:{i:0;s:52:\"The maximum number is : 3\r\nThe minimum number is : 1\";i:1;s:0:\"\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 11, 88, 0, '八上二单元,多分支结构', NULL, '2020-09-25 16:06:45', 6, '2020-09-25 16:07:35', NULL),
(1301, '简易计算器', '算术四则运算是数学中最常见的运算，现在我们要做一个四则运算的简易计算器，第一行与第二行分别输入2个实数用于进行计算，第三行中则输入加、减、乘、除（+ - * /）四个运算符，然后根据运算符进行相应的运算。如果是除法，需要对除数为 0 的情况进行异常处理。', '共 3 行，第一行与第二行为 2 个实数，第三行为 + - * / 这 4 个运算符号。', '输出运算的结果，结果保留 3 位小数。\r\n如果除数为 0 则输出“The divisor cannot be zero!”。', 'a:3:{i:0;s:7:\"1\r\n2\r\n+\";i:1;s:8:\"10\r\n0\r\n/\";i:2;s:0:\"\";}', 'a:3:{i:0;s:5:\"3.000\";i:1;s:27:\"The divisor cannot be zero!\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 78, 278, 0, '八上二单元,多分支结构', NULL, '2020-09-25 16:16:04', 6, '2020-10-27 20:57:41', NULL),
(1302, '运动会得分', '学校运动会比赛取前六名成绩，其中第一名得 7 分，第二名得 5 分，第三名得 4 分，第四名得 3 分，第五名得 2 分，第六名得 1 分。请根据输入的名称，计算出相应的得分。如果不在前六名之内，则输出“<span>error!</span>”。', '一个整数，为比赛的名次。', '名次对应的比赛的得分，如果不在前六名，则输出“error!”。', 'a:3:{i:0;s:1:\"1\";i:1;s:2:\"10\";i:2;s:0:\"\";}', 'a:3:{i:0;s:1:\"7\";i:1;s:6:\"error!\";i:2;s:0:\"\";}', 0, '<p>\r\n在本系统中，使用input()函数时，请不要在括号中加入提示文字，否则会被判为答案错误。&nbsp;\r\n</p>\r\n<p>\r\n书中:&nbsp;\r\n</p>\r\n<p>\r\nmc=int(input(\"参加运动会项目名次（1~6）：\"))&nbsp;\r\n</p>\r\n<p>\r\n应改为:&nbsp;\r\n</p>\r\n<p>\r\nmc=int(input())\r\n</p>', '', 1, 128, 1, 583, 1393, 0, '八上二单元,多分支结构', NULL, '2020-09-25 16:30:12', 6, '2020-10-27 21:03:24', NULL),
(1303, '星期几', '根据从键盘上输入的表示星期几的数字，对应输出它的英文名称。如何数字不在（1~7）范围内，则提示错误。', '一个数（1~7），表示星期几。', '输出星期对应的英文名（Monday、Tuesday、Wednesday、Thursday、Friday、Saturday、Sunday）。\r\n如何数字不在（1~7）范围内，则提示“error”。', 'a:3:{i:0;s:1:\"1\";i:1;s:1:\"7\";i:2;s:1:\"8\";}', 'a:3:{i:0;s:6:\"Monday\";i:1;s:6:\"Sunday\";i:2;s:5:\"error\";}', 0, '', '多分支结构', 1, 128, 1, 107, 224, 0, '八上二单元,多分支结构', NULL, '2020-09-27 14:40:14', 4, '2020-09-27 14:57:36', NULL),
(1304, '直角三角形', ' 输入三角形的三边，判断它是否是直角三角形。如果是，则输出“yes”，如果不是，则输出“no”。如果根本无法构成三角形，则输出“not a triangle”。', '三个整数，表示三角形的三条边。', '如果是直角三角形，则输出“yes”，如果不是，则输出“no”。如果根本无法构成三角形，则输出“not a triangle”。', 'a:3:{i:0;s:7:\"3\r\n4\r\n5\";i:1;s:7:\"2\r\n2\r\n2\";i:2;s:7:\"1\r\n2\r\n3\";}', 'a:3:{i:0;s:3:\"yes\";i:1;s:2:\"no\";i:2;s:14:\"not a triangle\";}', 0, '', '多分支结构', 1, 128, 1, 30, 49, 0, '八上二单元,多分支结构', NULL, '2020-09-27 14:49:36', 4, '2020-09-27 14:57:30', NULL),
(1305, '计算某年某月有多少天', '计算某年某月有多少天。\r\n平年2月为28天，闰年2月为29天。', '两行，每行一个正整数，分别表示：\r\n月份（1~12）\r\n年份', '一行，表示天数。', 'a:3:{i:0;s:9:\"2\r\n2020\r\n\";i:1;s:9:\"4\r\n2019\r\n\";i:2;s:0:\"\";}', 'a:3:{i:0;s:2:\"29\";i:1;s:2:\"30\";i:2;s:0:\"\";}', 0, '闰年判断方法：\r\n1、能被4整除，但不能被100整除；\r\n2、能被400整除；', '多分支结构', 1, 128, 1, 84, 178, 0, '八上二单元,多分支结构', NULL, '2020-09-27 20:50:55', 4, '2020-10-13 16:54:27', NULL),
(1306, '分数等第', '实行等第分制度，需要将学生的原始成绩转化成相应等第分。\r\n\r\n学生成绩分A、B、C、F四等，划分如下：（满分为100分）\r\n\r\n90分及以上 A等；\r\n80-89 B等；\r\n60-79 C等；\r\n60以下 F等。\r\n输入学生分数，请输出相应等第。\r\n', '一行，为学生成绩。', '一行，为转换后的等第成绩。', 'a:3:{i:0;s:2:\"90\";i:1;s:2:\"50\";i:2;s:0:\"\";}', 'a:3:{i:0;s:1:\"A\";i:1;s:1:\"F\";i:2;s:0:\"\";}', 0, '', '多分支结构', 1, 128, 1, 212, 484, 0, '八上二单元,多分支结构', NULL, '2020-09-28 08:34:18', 4, '2020-09-28 08:37:12', NULL),
(1307, '三角形形状', '输入三角形三边的边长，如果能构成三角形，则判断三角形的形状。\r\n若为锐角三角形则输出 acute triangle；\r\n若为直角三角形则输出&nbsp;right triangle；\r\n若为钝角三角形则输出 obtuse triangle；\r\n否则输出not a triangle。', '三行，每行一个整数，分别为三角形的边长。', '一行\r\n如能构成三角形，则显示三角形类型；\r\n如不能构成三角形，则输出&nbsp;<span>n</span><span>ot a triangle 。</span>', 'a:3:{i:0;s:7:\"4\r\n5\r\n3\";i:1;s:10:\"11\r\n11\r\n11\";i:2;s:7:\"1\r\n2\r\n3\";}', 'a:3:{i:0;s:14:\"right triangle\";i:1;s:14:\"acute triangle\";i:2;s:14:\"not a triangle\";}', 0, '', '多分支结构', 1, 128, 1, 8, 23, 0, '八上二单元,多分支结构', NULL, '2020-09-28 08:51:11', 4, '2020-10-27 21:27:01', NULL),
(1308, '求一元二次方程', '<span>利用公式 $x_1=\\dfrac{-b+\\sqrt{b^2-4ac}}{2a} , x_2=\\dfrac{-b-\\sqrt{b^2-4ac}}{2a}$ ，求一元二次方程 $ax^2+bx+c=0$ 的根，其中 $a$ 不等于 0 。结果要求精确到小数点后 5 位。&nbsp;</span>', '<span>输入一行，包含三个浮点数 $a,b,c$（它们之间以一个空格分开），分别表示方程 $ax^2+bx+c=0$ 的系数。</span>', '<p>\r\n输出一行，表示方程的解。\r\n</p>\r\n<p>\r\n若两个实根相等，则输出形式为：“$x1=x2=...$”；\r\n</p>\r\n<p>\r\n若两个实根不等，在满足根小者在前的原则，则输出形式为：“$x1=...;x2=...$”；\r\n</p>\r\n<p>\r\n若无实根输出 “No answer!” 。\r\n</p>\r\n<p>\r\n所有输出部分要求精确到小数点后 5 位，数字、符号之间没有空格。\r\n</p>', 'a:3:{i:0;s:18:\"-15.97 19.69 12.02\";i:1;s:14:\"7595 9894 3537\";i:2;s:5:\"2 4 2\";}', 'a:3:{i:0;s:22:\"x1=-0.44781;x2=1.68075\";i:1;s:10:\"No answer!\";i:2;s:14:\"x1=x2=-1.00000\";}', 0, '', '多分支结构', 1, 128, 1, 8, 31, 0, '八上二单元,多分支结构', NULL, '2020-09-28 11:31:33', 4, '2020-11-02 08:18:46', NULL),
(1309, '分段函数', '<p>\r\n编写程序，计算下列分段函数 $y=f(x)$ 的值。结果保留到小数点后三位。<br />\r\n<br />\r\n&nbsp; &nbsp; $y=−x+2.5;&nbsp; &nbsp; &nbsp; &nbsp; 0\\leqslant x&lt;5$<br />\r\n<br />\r\n&nbsp; &nbsp; $y=2−1.5(x−3)(x−3);&nbsp; &nbsp; &nbsp; &nbsp; 5\\leqslant x&lt;10$<br />\r\n<br />\r\n&nbsp; &nbsp; $y=\\dfrac{x}{2}−1.5;&nbsp; &nbsp; &nbsp; &nbsp; 10\\leqslant x&lt;20$\r\n</p>\r\n<p>\r\n<br />\r\n</p>', '一个浮点数 $N (0\\leqslant N&lt;20)$ 。', '输出 $N$ 对应的分段函数值：$f(N)$ 。结果保留到小数点后三位。', 'a:3:{i:0;s:3:\"1.0\";i:1;s:2:\"10\";i:2;s:4:\"6.85\";}', 'a:3:{i:0;s:5:\"1.500\";i:1;s:5:\"3.500\";i:2;s:7:\"-20.234\";}', 0, '', '', 1, 128, 1, 112, 399, 0, '八上二单元,多分支结构', NULL, '2020-10-27 21:50:21', 6, '2020-11-02 08:21:41', NULL),
(1400, '计算1到100内所有奇数的和', '计算 1~100 所有的奇数的和。使用函数 range()，起始值为 1，终值为 101（或 100 ），步长为 2。', '无', '一个整数，即奇数的和。', 'a:3:{i:0;s:3:\"无\";i:1;s:0:\"\";i:2;s:0:\"\";}', 'a:3:{i:0;s:3:\"无\";i:1;s:0:\"\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 1225, 1707, 0, '八上二单元,for循环', NULL, '2020-10-27 09:14:59', 6, '2020-10-27 09:19:42', NULL),
(1401, '求平均年龄', '<span>班上有学生若干名，给出每名学生的年龄（整数），求班上所有学生的平均年龄，保留到小数点后两位。</span>', '<span>第一行有一个整数 $n$（$1\\leqslant n \\leqslant100$），表示学生的人数。其后 $n$ 行每行有 1 个整数，表示每个学生的年龄，取值为 15 到 25 。</span>', '<span>输出一行，该行包含一个浮点数，为要求的平均年龄，保留到小数点后两位。</span>', 'a:3:{i:0;s:9:\"2\r\n18\r\n17\";i:1;s:36:\"8\r\n84\r\n94\r\n68\r\n71\r\n20\r\n35\r\n32\r\n100\r\n\";i:2;s:0:\"\";}', 'a:3:{i:0;s:5:\"17.50\";i:1;s:5:\"63.00\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 83, 221, 0, '八上二单元,for循环', NULL, '2020-10-15 08:32:52', 6, '2020-11-02 08:23:09', NULL),
(1402, '求整数的和与均值', '<span>读入 $n(1 \\leqslant&nbsp;n \\leqslant&nbsp;10000)$ 个整数，求它们的和与均值。</span>', '<p>\r\n输入第一行是一个整数 $n$，表示有 $n$ 个整数。\r\n</p>\r\n<p>\r\n接下来有$n$ 行，每行包含 1 个整数。每个整数的绝对值均不超过 10000 。\r\n</p>', '<span>输出一行，先输出和，再输出平均值(保留到小数点后 5 位)，两个数间用单个空格分隔。</span>', 'a:3:{i:0;s:18:\"3\r\n806\r\n595\r\n769\r\n\";i:1;s:27:\"5\r\n363\r\n86\r\n506\r\n155\r\n883\r\n\";i:2;s:0:\"\";}', 'a:3:{i:0;s:14:\"2170 723.33333\";i:1;s:14:\"1993 398.60000\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 584, 849, 0, '八上二单元,for循环', NULL, '2020-10-15 08:19:32', 6, '2020-11-02 08:28:01', NULL),
(1403, '最高的分数', '<span>孙老师讲授的《计算概论》这门课期中考试刚刚结束，他想知道考试中取得的最高分数。因为人数比较多，他觉得这件事情交给计算机来做比较方便。你能帮孙老师解决这个问题吗？</span>', '<span>输入 $n+1$ 行，第一行为整数 $n$（$1 &nbsp;\\leqslant&nbsp; n &lt; 100$），表示参加这次考试的人数.第二行开始是这 $n$ 个学生的成绩。所有成绩均为 0 到 100 之间的整数。</span>', '<span>输出一个整数，即最高的成绩。</span>', 'a:3:{i:0;s:21:\"5\r\n85\r\n78\r\n90\r\n99\r\n60\";i:1;s:15:\"3\r\n68\r\n96\r\n80\r\n\";i:2;s:0:\"\";}', 'a:3:{i:0;s:2:\"99\";i:1;s:2:\"96\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 107, 263, 0, '八上二单元,for循环', NULL, '2020-10-15 08:42:57', 6, '2020-11-02 08:31:33', NULL),
(1404, '满足条件的数累加', '<span>将正整数 $m$ 和 $n$ 之间(包括 $m$ 和 $n$ )能被 17 整除的数累加，其中 &nbsp;0&lt;$m$&lt;$n$&lt;1000 。</span>', '<span>一行，包含两个整数 $m$ 和 $n$ ，其间，以一个空格间隔。</span>', '<span>输出一行，包行一个整数，表示累加的结果。</span>', 'a:3:{i:0;s:5:\"50 85\";i:1;s:7:\"268 311\";i:2;s:0:\"\";}', 'a:3:{i:0;s:3:\"204\";i:1;s:3:\"867\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 10, 15, 0, '八上二单元,for循环', NULL, '2020-10-15 08:47:29', 6, '2020-11-02 08:32:56', NULL),
(1405, '求和', '<span>计算非负整数 $m$ 到 $n$ (包括 $m$ 和 $n$ )之间的所有数的和，其中， $m$ 不大于 $n$ ，且 $n$ 不大于 300 。例如 $m$=3, $n$=7, 其和则为：3+4+5+6+7=25 。</span>', '<span>两个整数 $m$ 和 $n$，每行一个数 。</span>', '<span>输出一行，包含一个整数，表示 $m$ 到 $n$ （包括 $m$ 和 $n$ ）之间的所有数的和。</span>', 'a:3:{i:0;s:4:\"3\r\n7\";i:1;s:9:\"80\r\n167\r\n\";i:2;s:0:\"\";}', 'a:3:{i:0;s:2:\"25\";i:1;s:5:\"10868\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 163, 431, 0, '八上二单元,for循环', NULL, '2020-10-15 07:44:49', 6, '2020-11-02 08:33:38', NULL),
(1406, '奇数求和', '<span>计算非负整数 $m$ 到 $n$ (包括 $m$ 和 $n$ )之间的所有奇数的和，其中， $m$ 不大于 $n$ ，且 $n$ 不大于 300 。例如 $m$=3, $n$=12 , 其和则为：3+5+7+9+11=35 。</span>', '<span>两个数 $m$ 和 $n$，两个数以一个空格分开，其中 $0 \\leqslant&nbsp;m \\leqslant&nbsp;n \\leqslant&nbsp;300$ &nbsp;。</span>', '<span>输出一行，包含一个整数，表示 $m$ 到 $n$ （包括 $m$ 和 $n$ ）之间的所有奇数的和。</span>', 'a:3:{i:0;s:4:\"7 15\";i:1;s:6:\"29 117\";i:2;s:0:\"\";}', 'a:3:{i:0;s:2:\"55\";i:1;s:4:\"3285\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 169, 545, 0, '八上二单元,for循环', NULL, '2020-10-15 09:14:53', 6, '2020-11-02 08:34:25', NULL),
(1407, '整数的个数', '<span>给定 $k$(1&lt;$k$&lt;100) 个正整数，其中每个数都是大于等于 1，小于等于 10 的数。写程序计算给定的 $k$ 个正整数中，1，5 和 10 出现的次数。</span>', '<span>输入有 $k+1$ 行：第一行包含一个正整数 $k$，第二行开始有 $k$&nbsp;行，每行一个整数。</span>', '<span>输出有三行，第一行为 1 出现的次数，，第二行为 5 出现的次数，第三行为 10 出现的次数。</span>', 'a:3:{i:0;s:17:\"5\r\n1\r\n5\r\n8\r\n10\r\n5\";i:1;s:20:\"5\r\n8\r\n1\r\n6\r\n10\r\n10\r\n\";i:2;s:0:\"\";}', 'a:3:{i:0;s:7:\"1\r\n2\r\n1\";i:1;s:7:\"1\r\n0\r\n2\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 10, 14, 0, '八上二单元,for循环', NULL, '2020-10-15 09:25:49', 6, '2020-11-02 08:37:46', NULL),
(1408, '人口增长', '<span>我国现有 $x$ 亿人口，按照每年0.1%的增长速度，$n$ 年后将有多少人？保留小数点后四位。</span>', '<span>一行，包含两个整数 $x$ 和 $n$，分别是人口基数和年数，以单个空格分隔。</span>', '<span>输出最后的人口数，以亿为单位，保留到小数点后四位。1$ \\leqslant&nbsp;x \\leqslant&nbsp;$100,1$ \\leqslant&nbsp;n \\leqslant&nbsp;$100。</span>', 'a:3:{i:0;s:5:\"13 10\";i:1;s:5:\"11 80\";i:2;s:0:\"\";}', 'a:3:{i:0;s:7:\"13.1306\";i:1;s:7:\"11.9157\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 9, 11, 0, '八上二单元,for循环', NULL, '2020-10-15 09:43:09', 6, '2020-11-02 08:38:22', NULL),
(1409, '津津的储蓄计划', '<span>津津的零花钱一直都是自己管理。每个月的月初妈妈给津津 300 元钱，津津会预算这个月的花销，并且总能做到实际花销和预算的相同。&nbsp;</span><br />\r\n<br />\r\n<span>&nbsp; 为了让津津学习如何储蓄，妈妈提出，津津可以随时把整百的钱存在她那里，到了年末她会加上 20％ 还给津津。因此津津制定了一个储蓄计划：每个月的月初，在得到妈妈给的零花钱后，如果她预计到这个月的月末手中还会有多于 100 元或恰好 100 元，她就会把整百的钱存在妈妈那里，剩余的钱留在自己手中。&nbsp;</span><br />\r\n<br />\r\n<span>&nbsp; 例如 11 月初津津手中还有 83 元，妈妈给了津津 300 元。津津预计 11 月的花销是 180 元，那么她就会在妈妈那里存 200 元，自己留下 183 元。到了 11 月月末，津津手中会剩下 3 元钱。&nbsp;</span><br />\r\n<br />\r\n<span>&nbsp; 现在请你根据 2018 年 1 月到 12 月每个月津津的预算，判断会不会出现这种情况。如果不会，计算到 2018 年年末，妈妈将津津平常存的钱加上 20％ 还给津津之后，津津手中会有多少钱。</span>', '<span><span>包括 12 行数据，每行包含一个小于 350 的非负整数，分别表示 1 月到 12 月津津的预算。</span></span><span></span>', '<span>只包含一个整数。如果储蓄计划实施过程中出现某个月钱不够用的情况，输出 -X，X 表示出现这种情况的第一个月；否则输出到 2018 年年末津津手中会有多少钱。</span>', 'a:3:{i:0;s:57:\"290\r\n230\r\n280\r\n200\r\n300\r\n170\r\n340\r\n50 \r\n90 \r\n80 \r\n200\r\n60\";i:1;s:59:\"169\r\n96\r\n162\r\n111\r\n143\r\n160\r\n108\r\n216\r\n200\r\n248\r\n299\r\n175\r\n\";i:2;s:0:\"\";}', 'a:3:{i:0;s:2:\"-7\";i:1;s:4:\"1813\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 10, 20, 0, '八上二单元,for循环', NULL, '2020-10-15 09:47:12', 6, '2020-11-02 08:39:17', NULL),
(1410, '最大跨度值', '<span>给定一个长度为 $n$ 的非负整数序列，请计算序列的最大跨度值(最大跨度值 = 最大值减去最小值)。</span>', '<span>一共&nbsp;n+1 行，第一行为序列的个数 $n$（$1 &nbsp;\\leqslant&nbsp; n &nbsp;\\leqslant&nbsp; 1000$)，第二行开始每行 $n$ 个非负整数。</span>', '<span>输出一行，表示序列的最大跨度值。</span>', 'a:3:{i:0;s:19:\"6\r\n3\r\n0\r\n8\r\n7\r\n5\r\n9\";i:1;s:38:\"7\r\n837\r\n414\r\n564\r\n923\r\n526\r\n378\r\n570\r\n\";i:2;s:0:\"\";}', 'a:3:{i:0;s:1:\"9\";i:1;s:3:\"545\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 9, 10, 0, '八上二单元,for循环', NULL, '2020-10-27 08:36:53', 6, '2020-11-02 08:40:19', NULL),
(1411, '寻找水仙花数', '<p>\r\n输出所有的“水仙花数”，所谓的“水仙花数”是指一个三位数其各位数字的立方和等于该数本身。\r\n</p>\r\n<p>\r\n<br />\r\n</p>\r\n<p>\r\n例如 153 是“水仙花数”。\r\n</p>\r\n<p>\r\n因为$1^3+5^3+3^3=153$\r\n</p>', '无', '<p>\r\n所有的水仙花数，直接使用Python中输出列表的格式输出。\r\n</p>\r\n<p>\r\n输出效果如下：\r\n</p>\r\n<p>\r\n[153, .....]\r\n</p>\r\n<p>\r\n所有的数用一对方括号包含，每个数字后有一个逗号，然后一个空格。（最后的数字后无逗号与空格）\r\n</p>', 'a:3:{i:0;s:3:\"无\";i:1;s:0:\"\";i:2;s:0:\"\";}', 'a:3:{i:0;s:3:\"无\";i:1;s:0:\"\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 45, 121, 0, '八上二单元,for循环', NULL, '2020-10-27 09:35:59', 6, '2020-10-27 16:44:43', NULL),
(1412, '分苹果', '<span>把一堆苹果分给 $n$ 个小朋友，要使每个人都能拿到苹果，而且每个人拿到的苹果数都不同的话，这堆苹果至少应该有多少个？</span>', '<span>一个不大于 1000 的正整数 $n$ ，代表小朋友人数。</span>', '<span>一个整数，表示满足条件的最少苹果个数。</span>', 'a:3:{i:0;s:1:\"8\";i:1;s:3:\"125\";i:2;s:0:\"\";}', 'a:3:{i:0;s:2:\"36\";i:1;s:4:\"7875\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 106, 274, 0, '八上二单元,for循环', NULL, '2020-10-27 08:47:31', 6, '2020-11-02 08:42:27', NULL),
(1413, '菲波那契数', '<p>\r\n<span>菲波那契数列是指这样的数列: 数列的第一个和第二个数都为 1 ，接下来每个数都等于前面 2 个数之和。</span> \r\n</p>\r\n<p>\r\n<span>1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89......<br />\r\n</span> \r\n</p>\r\n<p>\r\n<span>给出一个正整数 $k$ ，要求菲波那契数列中第 $k$ 个数是多少。</span> \r\n</p>', '<span>输入一行，包含一个正整数 $k$ 。（1$ \\leqslant&nbsp;k &nbsp;\\leqslant&nbsp;$46）</span>', '<span>输出一行，包含一个正整数，表示菲波那契数列中第k个数的大小。</span>', 'a:3:{i:0;s:2:\"19\";i:1;s:1:\"2\";i:2;s:0:\"\";}', 'a:3:{i:0;s:4:\"4181\";i:1;s:1:\"1\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 21, 49, 0, '八上二单元,for循环', NULL, '2020-10-15 09:19:12', 6, '2020-11-02 08:44:18', NULL),
(1500, '多个数求和', '输入多个数，这些数每行一个，最后一个直接用回车键结束，所以不确定有多少个数字，请编程计算出这些数有多少个，并且计算出这些数的和。', '多个数字，每行一个，最后一行直接回车键结束。', '分 2&nbsp;行，第一行为输入数字的数量，第二行为这些数的和，保留 2&nbsp;位小数。', 'a:3:{i:0;s:15:\"10\r\n3\r\n6\r\n8\r\n\r\n\";i:1;s:34:\"0\r\n-584\r\n193\r\n223\r\n349\r\n385\r\n325\r\n\";i:2;s:0:\"\";}', 'a:3:{i:0;s:8:\"4\r\n27.00\";i:1;s:9:\"7\r\n891.00\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 18, 59, 0, '八上二单元,while循环', NULL, '2020-10-27 09:56:05', 6, '2020-11-02 08:46:15', NULL),
(1501, '除7以外的数', '输入一个正整数 $n$ ，其值在 10 ~ 1000 之间，现在需要将 1&nbsp;到 $n$&nbsp;之间除了能被 7&nbsp;整除的所有数都输出，每行一个数。', '一个 10 ~ 1000 之间的正整数．', '按顺序从小到大输出除了能被 7&nbsp;整除的所有数，每行一个数。', 'a:3:{i:0;s:2:\"10\";i:1;s:1:\"8\";i:2;s:0:\"\";}', 'a:3:{i:0;s:26:\"1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n8\r\n9\r\n10\";i:1;s:19:\"1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n8\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 13, 17, 0, '八上二单元,while循环', NULL, '2020-10-27 12:48:33', 6, '2020-11-02 08:48:08', NULL),
(1502, '分离整数的各个数', '<span>给定一个整数 $n$ (1$ \\leqslant&nbsp;n \\leqslant&nbsp;$100000000)，要求从个位开始分离出它的每一位数字。从个位开始按照从低位到高位的顺序依次输出每一位数字。</span>', '<span>输入一个整数，整数在 1 到 100000000 之间。</span>', '<span>从个位开始按照从低位到高位的顺序依次输出每一位数字。数字之间以一个空格分开。</span>', 'a:3:{i:0;s:3:\"123\";i:1;s:3:\"920\";i:2;s:0:\"\";}', 'a:3:{i:0;s:5:\"3 2 1\";i:1;s:5:\"0 2 9\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 8, 12, 0, '八上二单元,while循环', NULL, '2020-10-27 10:15:41', 6, '2020-11-02 08:49:11', NULL),
(1503, '角谷猜想', '<p>\r\n<span>所谓角谷猜想，是指对于任意一个正整数，如果是奇数，则乘 3 加 1 ，如果是偶数，则除以 2 ，得到的结果再按照上述规则重复处理，最终总能够得到 1 。<span>程序要求输入一个整数，将经过处理得到 1 的过程需要多少步骤的数量输出。</span></span> \r\n</p>\r\n<p>\r\n<span><br />\r\n</span> \r\n</p>\r\n<p>\r\n<span>如，假定初始整数为 5 ，计算过程如下：</span> \r\n</p>\r\n<p>\r\n<span>5*3+1=16<br />\r\n16/2=8<br />\r\n8/2=4<br />\r\n4/2=2<br />\r\n2/2=1<br />\r\n<br />\r\n</span> \r\n</p>\r\n<p>\r\n<span>以上过程一共需要 5&nbsp;步，所以输出 5。</span> \r\n</p>\r\n<p>\r\n<br />\r\n</p>', '<span>一个正整数 $n$ 。</span>', '<span>这个整数变化到1的步骤数量。</span>', 'a:3:{i:0;s:1:\"5\";i:1;s:2:\"77\";i:2;s:0:\"\";}', 'a:3:{i:0;s:1:\"5\";i:1;s:2:\"22\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 12, 16, 0, '八上二单元,while循环', NULL, '2020-10-27 10:21:18', 6, '2020-11-02 08:50:27', NULL),
(1504, '打印星星', '<p>输入一个数字 $n$ ，按要求输出 $n$ 行指定的图形。</p><p>例1：$n$ = 3&nbsp;则输出</p><p><code>*&nbsp;</code><br><code>**&nbsp;</code><br><code>***&nbsp;</code></p><p>&nbsp;</p><p>例2：$n$ = 5 则输出<br><code>*&nbsp;</code><br><code>**&nbsp;</code><br><code>***&nbsp;</code><br><code>****&nbsp;</code><br><code>*****​&nbsp;</code></p>', '<p>一个整数 $n$ ，表示需要打印图形的行数，$n$ &lt; 20。</p>', '<p>由 *&nbsp;字符组成的指定行数的图形。</p>', 'a:3:{i:0;s:1:\"3\";i:1;s:1:\"5\";i:2;s:0:\"\";}', 'a:3:{i:0;s:10:\"*\r\n**\r\n***\";i:1;s:26:\"*\r\n**\r\n***\r\n****\r\n*****​\";i:2;s:0:\"\";}', 0, '<p>如果要打印 $n$ 个星号，可以使用以下方法：</p><p>$print(\'*\' * n)$</p>', '', 1, 128, 1, 12, 20, 0, '八上二单元,while循环', NULL, '2020-10-27 10:48:14', 6, '2020-10-27 13:05:24', NULL),
(1505, '余数相同问题', '<p>\r\n已知三个正整数 $a，b，c$ 。现有一个大于 1 的整数 $x$ ，将其作为除数分别除 $a，b，c$ ，得到的余数相同。\r\n</p>\r\n<p>\r\n请问满足上述条件的 $x$ 的最小值是多少？数据保证 $x$ 有解。\r\n</p>', '<span>一行，三个不大于 1000000 的正整数 $a，b，c$ ，两个整数之间用一个空格隔开。</span>', '<span>一个整数，即满足条件的 $x$ 的最小值。</span>', 'a:3:{i:0;s:11:\"300 262 205\";i:1;s:13:\"6315 9459 939\";i:2;s:0:\"\";}', 'a:3:{i:0;s:2:\"19\";i:1;s:1:\"2\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 9, 11, 0, '八上二单元,while循环', NULL, '2020-10-27 08:44:43', 6, '2020-11-02 08:51:26', NULL),
(1506, '打印字符矩形', '<p>\r\n按要求，根据输入的整数 $n$&nbsp;来打印一个由字符 @&nbsp;组成的空心字符矩形。\r\n</p>\r\n<p>\r\n例如，当 $n$ = 5&nbsp;时，输出图形为：\r\n</p>\r\n<p>\r\n<br />\r\n</p>\r\n<pre>\r\n@@@@@\r\n@   @ \r\n@   @ \r\n@   @ \r\n@@@@@\r\n</pre>\r\n', '<p>\r\n一个3 ~ 50&nbsp;之间的整数 $n$&nbsp; 。\r\n</p>', '<p>\r\n一个由字符 @&nbsp;组成的空心矩形。\r\n</p>', 'a:3:{i:0;s:1:\"5\";i:1;s:1:\"3\";i:2;s:0:\"\";}', 'a:3:{i:0;s:33:\"@@@@@\r\n@   @\r\n@   @\r\n@   @\r\n@@@@@\";i:1;s:13:\"@@@\r\n@ @\r\n@@@\";i:2;s:0:\"\";}', 0, '<p>\r\n如果要打印 $n$ 个@，可以使用以下方法：\r\n</p>\r\n<p>\r\n$print(\'@\' * n)$\r\n</p>', '', 1, 128, 1, 10, 14, 0, '八上二单元,while循环', NULL, '2020-10-27 13:02:44', 6, '2021-06-25 13:29:34', NULL),
(1507, '球弹跳高度的计算', '有一个小球从某一高度 $h$ 落下(单位米)，每次落地后反跳回原来高度的一半，再落下。编程计算小球在第 $n$ 次落地时反弹有多高？<br />\r\n<br />', '输入分 2&nbsp;行,第一行整数 $h$，表示球的初始高度。第二行整数 $n$ ，表示反弹的次数。', '第 $n$ 次反弹的高度，保留 6 位小数。<br />', 'a:3:{i:0;s:6:\"20\r\n10\";i:1;s:12:\"370000\r\n16\r\n\";i:2;s:0:\"\";}', 'a:3:{i:0;s:8:\"0.019531\";i:1;s:8:\"5.645752\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 9, 14, 0, '八上二单元,while循环', NULL, '2020-10-28 08:13:08', 6, '2020-11-02 08:54:19', NULL),
(1508, '含k个3的数', '<p>\r\n输入两个正整数 $m$ 和 $k$ ，其中 1 $&lt; m &lt;$ 100000 ，1 $&lt; k &lt;$ 5 ，判断 $m$ 能否被 19 整除，且恰好含有 $k$ 个 3 ，如果满足条件，则输出YES ，否则，输出 NO 。&nbsp;\r\n</p>\r\n<p>\r\n例如，\r\n</p>\r\n<p>\r\n输入：43833 与 3，满足条件，输出 YES 。\r\n</p>\r\n<p>\r\n输入：39331 与 3，尽管有 3 个 3，但不能被 19 整除，也不满足条件，应输出 NO 。\r\n</p>', '$m$ 和 $k$ 的值，中间用单个空格间隔。', '满足条件时输出 YES，不满足时输出 NO。', 'a:3:{i:0;s:7:\"43833 3\";i:1;s:7:\"39331 3\";i:2;s:0:\"\";}', 'a:3:{i:0;s:3:\"YES\";i:1;s:2:\"NO\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 6, 22, 0, '八上二单元,while循环', NULL, '2020-10-28 08:32:56', 6, '2020-10-28 08:38:44', NULL),
(1509, '更相减损术', '更相减损术是出自《九章算术》的一种求最大公约数的算法。<br />\r\n<br />\r\n第一步：任意给定两个正整数；判断它们是否都是偶数。若是，则用 2 约简；若不是则执行第二步。<br />\r\n第二步：以较大的数减较小的数，接着把所得的差与较小的数比较，并以大数减小数。继续这个操作，直到所得的减数和差相等为止。<br />\r\n则第一步中约掉的若干个 2 与第二步中等数的乘积就是所求的最大公约数。<br />\r\n其中所说的“等数”，就是最大公约数。求“等数”的办法是“更相减损”法。<br />\r\n<br />\r\n例1、用更相减损术求 98 与 63 的最大公约数。<br />\r\n解：由于 63 不是偶数，把 98 和 63 以大数减小数，并辗转相减：<br />\r\n98-63=35<br />\r\n63-35=28<br />\r\n35-28=7<br />\r\n28-7=21<br />\r\n21-7=14<br />\r\n14-7=7<br />\r\n所以，98 和 63 的最大公约数等于 7 。<br />\r\n<br />\r\n例2、用更相减损术求 260 和 104 的最大公约数。<br />\r\n解：由于 260 和 104 均为偶数，首先用 2 约简得到 130 和 52 ，再用 2 约简得到 65 和 26 。<br />\r\n此时 65 是奇数而 26 不是奇数，故把 65 和 26 辗转相减：<br />\r\n65-26=39<br />\r\n39-26=13<br />\r\n26-13=13<br />\r\n所以，260 与 104 的最大公约数等于 13 乘以第一步中约掉的两个 2 ，即 13*2*2=52 。<br />', '&nbsp;输入两个正整数，范围在 1000000 以内。', '&nbsp;输出一个整数。', 'a:3:{i:0;s:5:\"98 63\";i:1;s:7:\"260 104\";i:2;s:0:\"\";}', 'a:3:{i:0;s:1:\"7\";i:1;s:2:\"52\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 5, 8, 0, '八上二单元,while循环', NULL, '2020-10-28 08:43:22', 6, '2020-10-28 08:44:51', NULL),
(1510, '求阶乘的和', '给定正整数 $n$ ，求不大于 $n$ 的正整数的阶乘的和（即求 1!+2!+3!+...+$n$! ），输出阶乘的和。', '输入有一行，包含一个正整数 $n$（1 &lt; $n$ &lt; 12）。', '输出有一行：阶乘的和。', 'a:3:{i:0;s:1:\"5\";i:1;s:1:\"3\";i:2;s:0:\"\";}', 'a:3:{i:0;s:3:\"153\";i:1;s:1:\"9\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 6, 8, 0, '八上二单元,while循环', NULL, '2020-10-30 09:31:02', 6, '2020-10-30 09:32:27', NULL),
(1511, '金币', '国王将金币作为工资，发放给忠诚的骑士。第 1 天，骑士收到一枚金币；之后两天(第 2 天和第 3 天)里，每天收到两枚金币；之后三天(第 4、5、6 天)里，每天收到三枚金币；之后四天(第 7、8、9、10 天)里，每天收到四枚金币……这种工资发放模式会一直这样延续下去：之后连续 $n$ 天每天收到 $n$ 枚金币( $n$ 为任意正整数)。&nbsp;<br />\r\n<br />\r\n你需要编写一个程序，确定从第一天开始的给定天数内，骑士一共获得了多少金币。<br />', '一个整数（范围 1 到 10000 ），表示天数。', '骑士获得的金币数。', 'a:3:{i:0;s:1:\"6\";i:1;s:5:\"10000\";i:2;s:0:\"\";}', 'a:3:{i:0;s:2:\"14\";i:1;s:6:\"942820\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 7, 8, 0, '八上二单元,while循环', NULL, '2020-10-30 09:39:00', 6, '2020-10-30 11:12:56', NULL),
(1512, '素数个数', '<p>\r\n一个大于 1 的自然数，除了 1 和它自身外，不能被其他自然数整除的数叫做素数（质数）。\r\n</p>\r\n<p>\r\n编程求 2～$n$ ( $n$ 为大于 2 的正整数 ) 中有多少个素数。\r\n</p>', '输入 $n(2 \\leqslant n \\leqslant 50000)$ 。', '素数个数。', 'a:3:{i:0;s:2:\"10\";i:1;s:3:\"306\";i:2;s:0:\"\";}', 'a:3:{i:0;s:1:\"4\";i:1;s:2:\"62\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 8, 26, 0, '八上二单元,while循环', NULL, '2020-10-30 10:32:33', 6, '2020-10-30 10:45:29', NULL),
(1513, '最佳存款方案', '假设银行一年整存零取的月息为 0.63%。现在某人手中有一笔钱，他打算在今后的 $n$ 年中的每年年底取出 1000 元，到第 $n$ 年时刚好取完，请算出他存钱时应存入多少。', '一行，一个整数 $n$。( $n$&gt;0 )', '一个浮点数，表示存钱的总额，结果保留 2 位小数。', 'a:3:{i:0;s:3:\"5\r\n\";i:1;s:0:\"\";i:2;s:0:\"\";}', 'a:3:{i:0;s:7:\"4039.44\";i:1;s:0:\"\";i:2;s:0:\"\";}', 0, '从第 $n$ 年开始向前递推，可求出此人应该在银行中存钱的金额。循环 $n$-1 次，每次循环都在上一次的基础上，加上 1000，在除以（ 1+0.0063*12 ）。', 'while循环', 1, 128, 1, 6, 9, 0, '八上二单元,while循环', NULL, '2020-12-04 08:39:10', 4, '2020-12-23 09:35:52', NULL),
(1514, '数字猜猜猜1', '给定一个整数，让用户进行猜测并输入数，计算机给出相应提示，如偏大、偏小或正确。', '一行，一个正整数', 'Too big!或Too small!或Bingo!', 'a:3:{i:0;s:1:\"0\";i:1;s:3:\"100\";i:2;s:2:\"66\";}', 'a:3:{i:0;s:10:\"Too small!\";i:1;s:8:\"Too big!\";i:2;s:6:\"Bingo!\";}', 0, '', '八上第二单元', 1, 128, 1, 7, 19, 0, '八上二单元,while循环', NULL, '2021-04-13 10:21:57', 4, '2021-04-26 14:24:09', NULL),
(1515, '数字猜猜猜2', '<span style=\"color:#333333;font-family:-apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif;font-size:16px;background-color:#FFFFFF;\">给定一个整数，让用户进行猜测并输入数，计算机给出相应提示，如偏大、偏小或正确。如果猜对了，则显示猜测的次数。</span>', '<p>\r\n一行，为一个正整数\r\n</p>', '<p>\r\n<span style=\"color:#333333;font-family:-apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif;font-size:16px;background-color:#FFFFFF;\">Too big!或Too small!或Bingo!</span> \r\n</p>\r\n<p>\r\n<span style=\"color:#333333;font-family:-apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif;font-size:16px;background-color:#FFFFFF;\">一个整数（为猜测的次数）</span> \r\n</p>', 'a:3:{i:0;s:1:\"0\";i:1;s:3:\"100\";i:2;s:2:\"66\";}', 'a:3:{i:0;s:10:\"Too small!\";i:1;s:8:\"Too big!\";i:2;s:9:\"Bingo!\r\n3\";}', 0, '', '八上第二单元', 1, 128, 1, 4, 5, 0, '八上二单元,while循环', NULL, '2021-04-13 10:29:19', 4, '2021-04-26 14:24:34', NULL),
(1516, '数字猜猜猜3', '<span style=\"color:#333333;font-family:-apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif;font-size:16px;background-color:#FFFFFF;\">从键盘输入一个正整数，让用户进行猜测并输入数，计算机给出相应提示，如偏大、偏小或正确。如果猜对了，则显示猜测的次数。</span>', '<p>\r\n两行\r\n</p>\r\n<p>\r\n第一行为一个正整数，表示需要猜测的数。\r\n</p>\r\n<p>\r\n第二行为一个正整数，表示用户猜测输入的数。\r\n</p>', '<p style=\"color:#333333;font-family:-apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif;font-size:16px;background-color:#FFFFFF;\">\r\n<span>Too big!或Too small!或Bingo!</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:-apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif;font-size:16px;background-color:#FFFFFF;\">\r\n<span>一个整数（为猜测的次数）</span> \r\n</p>', 'a:3:{i:0;s:5:\"66\r\n0\";i:1;s:7:\"66\r\n100\";i:2;s:6:\"66\r\n66\";}', 'a:3:{i:0;s:10:\"Too small!\";i:1;s:8:\"Too big!\";i:2;s:9:\"Bingo!\r\n1\";}', 0, '', '八上第二单元', 1, 128, 1, 4, 4, 0, '八上二单元,while循环', NULL, '2021-04-13 10:40:41', 4, '2021-04-26 15:25:22', NULL),
(1600, '兔子繁殖', '有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月 后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？（输出前 $n$ 个月每个月的兔子数量）', '一个整数 $n$ ，表示第 $n$&nbsp;个月。', '一个数学序列，表示每个月的兔子数量，数字与数字之间用空隔分开。', 'a:3:{i:0;s:2:\"10\";i:1;s:1:\"5\";i:2;s:0:\"\";}', 'a:3:{i:0;s:23:\"1 1 2 3 5 8 13 21 34 55\";i:1;s:9:\"1 1 2 3 5\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 7, 32, 0, '八上三单元,函数', NULL, '2020-10-30 12:34:15', 6, '2020-10-30 12:39:58', NULL),
(1601, '计算天数', '根据已知的年、月、日，计算出这个组定的日期是该年的第几天？（计算时需要考虑这一年是不是闰年）', '一个3个整数，分别是年、月、日，中间用空格分开。', '一个整数，即该年的第几天。', 'a:3:{i:0;s:12:\"1990\r\n12\r\n31\";i:1;s:11:\"2000\r\n3\r\n28\";i:2;s:0:\"\";}', 'a:3:{i:0;s:3:\"365\";i:1;s:2:\"88\";i:2;s:0:\"\";}', 0, '<span style=\"color:#333333;font-family:-apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif;font-size:16px;background-color:#FFFFFF;\">闰年条件： 满足下列条件之一的年份即为闰年： 1）能被4整除不能被100整除的年份； 2）能被400整除的年份。</span>', '', 1, 128, 1, 5, 6, 0, '八上三单元,函数', NULL, '2020-10-30 12:45:38', 6, '2020-10-30 13:00:39', NULL),
(1602, '魔法数字变换', '<p>\r\n编写一个名为 collatz() 的函数,它有一个名为number的参数\r\n</p>\r\n<p>\r\n如果参数是偶数，那么 collatz() 就将数字变换为原来的一半，并打印。\r\n</p>\r\n<p>\r\n如果number是奇数， collatz() 就将数字变换为 3*number+1 ，并打印。\r\n</p>', '一个整数。', '通过函数&nbsp;<span>collatz()&nbsp;打印出经过计算后的值。</span>', 'a:3:{i:0;s:1:\"2\";i:1;s:1:\"3\";i:2;s:0:\"\";}', 'a:3:{i:0;s:1:\"1\";i:1;s:2:\"10\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 5, 8, 0, '八上三单元,函数', NULL, '2020-10-30 15:17:43', 6, '2020-10-30 16:10:36', NULL),
(1603, '成绩等级', '<p>\r\n期中考试结束了，学校决定用 A~F 这样 5&nbsp;个等级来评定同学们的成绩，等级的具体评定的方法如下：\r\n</p>\r\n<p>\r\n<span>&emsp;&emsp;</span>A: 90–100<br />\r\n&emsp;&emsp;B: 80–89<br />\r\n&emsp;&emsp;C: 70–79<br />\r\n&emsp;&emsp;D: 60–69<br />\r\n&emsp;&emsp;F: &lt;60\r\n</p>\r\n<p>\r\n老师决定让学习了 Python 的小明，编写一个程序，将各门课的成绩转化为等级，打印出来。\r\n</p>\r\n<p>\r\n小明经过思考，觉得可以先编写一个函数 scoreOut(n)&nbsp;来将一门课的成绩转化为等级打印出来，然后多门课的成绩就只需要多次调用这个函数就行了。\r\n</p>', '一共 6&nbsp;门课的成绩，分别是语文、数学、英语、科学、社会、法制，每门课一行，为一个整数。', '共 6&nbsp;行，每行为 A~F&nbsp;之间的一个等级。', 'a:3:{i:0;s:24:\"82\r\n97\r\n71\r\n72\r\n87\r\n90\r\n\";i:1;s:24:\"59\r\n83\r\n66\r\n69\r\n51\r\n77\r\n\";i:2;s:0:\"\";}', 'a:3:{i:0;s:18:\"B\r\nA\r\nC\r\nC\r\nB\r\nA\r\n\";i:1;s:16:\"F\r\nB\r\nD\r\nD\r\nF\r\nC\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 5, 7, 0, '八上三单元,函数', NULL, '2020-10-30 15:46:25', 6, '2020-11-02 08:55:44', NULL),
(1606, '短信计费', '用手机发短信，一条短信资费为 0.1 元，但限定一条短信的内容在 70 个字以内(包括 70 个字）。如果你一次所发送的短信超过了 70 个字，则会按照每 70 个字一条短信的限制把它分割成多条短信发送。假设已经知道你当月所发送的短信的字数，试统计一下你当月短信的总资费。', '第一行是整数 $n$，表示当月发送短信的总次数，接着 $n$ 行每行一个整数，表示每次短信的字数。', '输出一行，当月短信总资费，单位为元，精确到小数点后 1 位。', 'a:3:{i:0;s:43:\"10\r\n39\r\n49\r\n42\r\n61\r\n44\r\n147\r\n42\r\n72\r\n35\r\n46\";i:1;s:39:\"10\r\n20\r\n30\r\n40\r\n50\r\n60\r\n7\r\n8\r\n9\r\n10\r\n11\";i:2;s:0:\"\";}', 'a:3:{i:0;s:3:\"1.3\";i:1;s:3:\"1.0\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 6, 8, 0, '八上三单元,函数', NULL, '2020-10-30 13:07:27', 6, '2020-11-02 08:56:45', NULL),
(1607, '与7无关的数', '一个正整数，如果它能被 7 整除，或者它的十进制表示法中某一位上的数字为 7 ，则称其为与 7 相关的数。现求所有小于等于 $n$ ($n$&lt;100) 与 7 无关的正整数的平方和。', '输入为一行,正整数 $n$ ($n$&lt;100)&nbsp;', '输出一行，包含一个整数，即小于等于 $n$ 的所有与 7 无关的正整数的平方和。', 'a:3:{i:0;s:2:\"21\";i:1;s:2:\"73\";i:2;s:0:\"\";}', 'a:3:{i:0;s:4:\"2336\";i:1;s:5:\"85596\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 6, 7, 0, '八上三单元,函数', NULL, '2020-10-30 13:11:41', 6, '2020-11-02 08:59:01', NULL),
(1608, '哥德巴赫猜想', '哥德巴赫猜想的命题之一是:大于 6 的偶数等于两个素数之和。编程将 6～100 所有偶数表示成两个素数之和。', '<span>（无）</span>', '分行输出：&nbsp;<br />\r\n<br />\r\n例如:&nbsp;<br />\r\n6=3+3&nbsp;<br />\r\n8=3+5&nbsp;<br />\r\n...&nbsp;<br />\r\n(每个数只拆开一次，请保证第一个加数最小)<br />', 'a:3:{i:0;s:9:\"（无）\";i:1;s:0:\"\";i:2;s:0:\"\";}', 'a:3:{i:0;s:9:\"（无）\";i:1;s:0:\"\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 5, 25, 0, '八上三单元,函数', NULL, '2020-10-30 13:05:09', 6, '2020-10-30 13:13:07', NULL),
(1609, '回文三位数', '<p>\r\n如果一个数从左边读和从右边读都是同一个数，就称为回文数。例如 6886 就是一个回文数，求出所有的既是回文数又是素数的三位数。\r\n</p>\r\n<p>\r\n提示：可以写 2&nbsp;个函数分别来判断是不是回文数，以及是不是素数，然后再用循环判断所有的三位数。\r\n</p>', '（无）', '所有的既是回文数又是素数的三位数。一个数一行。', 'a:3:{i:0;s:3:\"无\";i:1;s:0:\"\";i:2;s:0:\"\";}', 'a:3:{i:0;s:3:\"无\";i:1;s:0:\"\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 6, 14, 0, '八上三单元,函数', NULL, '2020-10-30 13:03:09', 6, '2020-10-30 16:02:56', NULL),
(1610, '输出最大的奇数', '编写一个程序，要求用户输入10个整数，然后输出其中最大的奇数。如果用户没有输入奇数，则输出一个消息进行说明。', '输入10行，分别为10个不小于 0&nbsp;的整数。<br />', '<p>\r\n如果有奇数，则输出最大的奇数；\r\n</p>\r\n<p>\r\n<br />\r\n</p>\r\n<p>\r\n如果没有奇数，则输出“No odd”\r\n</p>', 'a:3:{i:0;s:37:\"12\r\n22\r\n32\r\n34\r\n36\r\n38\r\n26\r\n24\r\n10\r\n2\";i:1;s:37:\"87\r\n12\r\n11\r\n10\r\n98\r\n101\r\n11\r\n2\r\n33\r\n0\";i:2;s:0:\"\";}', 'a:3:{i:0;s:6:\"No odd\";i:1;s:3:\"101\";i:2;s:0:\"\";}', 0, '', '', 1, 128, 1, 5, 17, 0, '八上三单元,函数', NULL, '2020-11-17 15:58:41', 4, '2020-11-19 19:23:22', NULL);

--
-- 转储表的索引
--

--
-- 表的索引 `problem`
--
ALTER TABLE `problem`
  ADD PRIMARY KEY (`id`),
  ADD KEY `idx_created_by` (`created_by`);

--
-- 在导出的表使用AUTO_INCREMENT
--

--
-- 使用表AUTO_INCREMENT `problem`
--
ALTER TABLE `problem`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=1611;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
